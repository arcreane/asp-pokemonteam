@{
ViewData["Title"] = "PokeGacha";
}

<div style="display: flex; height: 100vh;">
    <!-- gauche -->
    <div style="flex: 2; padding: 1rem; border-right: 2px solid #ddd;">
        <h1>POKEGACHA</h1>
        <h2>Gotta Catch Them All!</h2>
        <div style="margin-bottom:10px;">
            <strong>Pokédollars : <span id="pokedollar">-</span></strong><br/>
            <small>Prix du pull : 10 pokédollars</small>
        </div>
        <button id="draw" style="border:none; background:none;">
            <img src="https://assets-v2.lottiefiles.com/a/ae47ca2c-bd64-11ef-8a23-cfbc45d0a788/HgjuHFgI6d.gif"
                 alt="Pokeball" width="80" />
        </button>
        <img id="loading" src="https://i.gifer.com/VAyR.gif" style="display:none; width:50px;" />
        <div id="result" style="margin-top: 20px;"></div>
    </div>

    <!-- droite = pokedex -->
    <div style="flex: 1; display: flex; flex-direction: column;">
        <div id="pokedex" style="flex: 1; overflow-y:auto; border-bottom: 2px solid #ddd; padding:1rem;">
            <h3>Pokédex</h3>
            <div id="pokedexLoading" style="text-align:center;">
                <img src="https://i.gifer.com/ZZ5H.gif" alt="loading" style="width:60px;"/>
                <p>Chargement du Pokédex...</p>
            </div>
            <div id="pokedexGrid" style="display:grid; grid-template-columns: repeat(4, 1fr); gap:5px; display:none;">
                <!-- sprites seront injectés ici -->
            </div>
        </div>
        <div id="future" style="flex: 1; padding: 1rem;">
            <h3>À venir</h3>
        </div>
    </div>
</div>

<audio id="gachaSound" src="https://vgmsite.com/soundtracks/pokemon-red-blue-yellow-gameboy-soundtrack/ljmxehvo/112%20-%20Caught%20Pokemon.mp3"></audio>

@section Scripts {
<script>
    const game = "pokeGacha";
    let currentPokedollar = 0;
    let capturedPokemonIds = [];

    function renderPokedex() {
        const container = document.getElementById("pokedexGrid");
        container.innerHTML = "";
        container.style.display = "grid"; // montrer la grille
        document.getElementById("pokedexLoading").style.display = "none"; // cacher le spinner

        for (let id = 1; id <= 151; id++) {
            const spriteUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;
            const isCaptured = capturedPokemonIds.includes(id);
            container.innerHTML += `
                <img src="${spriteUrl}"
                     style="width:50px; filter:${isCaptured ? 'none' : 'grayscale(100%)'};"
                     alt="pokemon ${id}" />
            `;
        }
    }

    // au chargement
    window.addEventListener("load", () => {
        fetch(`/api/player/me?game=${game}`)
            .then(res => {
                if (res.status === 404) {
                    // pas de joueur → on le crée
                    return fetch("/api/player/create", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            name: `${game}-player`,
                            game: game
                        })
                    }).then(r => r.json());
                } else {
                    return res.json();
                }
            })
            .then(player => {
                document.getElementById("pokedollar").textContent = player.pokedollar;
                currentPokedollar = player.pokedollar;

                // récupère les pokémons capturés
                return fetch("/PokeGacha/CapturedByMe");
            })
            .then(res => res.json())
            .then(ids => {
                capturedPokemonIds = ids;
                renderPokedex();
            })
            .catch(err => console.error(err));
    });

    const drawButton = document.getElementById("draw");
    const loading = document.getElementById("loading");
    const sound = document.getElementById("gachaSound");

    drawButton.addEventListener("click", () => {
        if (currentPokedollar < 10) {
            alert("Vous n'avez pas assez de pokédollars !");
            return;
        }

        loading.style.display = "block";

        fetch(`/PokeGacha/Pull`, { method: "POST" })
            .then(res => {
                if (!res.ok) throw new Error("Pas assez de pokédollars !");
                return res.json();
            })
            .then(data => {
                sound.play();
                const pokemon = data.pokemon;
                const spriteUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;

                document.getElementById("result").innerHTML = `
                    <div style="border:1px solid #ccc; padding:1rem; border-radius:8px;">
                        <h3>${pokemon.name}</h3>
                        <img src="${spriteUrl}" alt="${pokemon.name}" />
                        <p>HP: ${pokemon.healthPoint}</p>
                        <p>ATK: ${pokemon.strength}</p>
                        <p>DEF: ${pokemon.defense}</p>
                        <p>SPD: ${pokemon.speed}</p>
                    </div>
                `;

                currentPokedollar = data.pokedollar;
                document.getElementById("pokedollar").textContent = data.pokedollar;

                // ajout du pokémon au joueur
                fetch("/Pokemon/addPokemonToPlayer", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        pokemonId: pokemon.id,
                        game: game
                    })
                })
                    .then(() => {
                        if (!capturedPokemonIds.includes(pokemon.id)) {
                            capturedPokemonIds.push(pokemon.id);
                            renderPokedex();
                        }
                    })
                    .catch(err => console.error("Erreur association joueur/pokemon:", err));
            })
            .catch(err => alert(err.message))
            .finally(() => loading.style.display = "none");
    });
</script>
}
