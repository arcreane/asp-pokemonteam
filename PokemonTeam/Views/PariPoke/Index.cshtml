@{
ViewData["Title"] = "PariPoke";
Layout = "_Layout";
}

<h2>Course Pokémon - Parie ton Pokédollar</h2>

<label for="pokemon">Choisis ton Pokémon :</label>
<select id="pokemon">
    <option value="Pikachu">Pikachu</option>
    <option value="Bulbasaur">Bulbasaur</option>
    <option value="Charmander">Charmander</option>
    <option value="Squirtle">Squirtle</option>
</select>

<br />

<label for="mise">Montant du pari :</label>
<input id="mise" type="number" value="10" min="1" />

<br />

<button id="startRace">Démarrer la course</button>

<div id="raceContainer">
    <svg id="raceSVG" width="1600" height="600" viewBox="0 0 1600 600" xmlns="http://www.w3.org/2000/svg" style="background:#70c470;">
        <!-- COULOIR 1 -->
        <path id="trackPath1" d="
            M 300 180
            H 1300
            A 120 120 0 0 1 1300 420
            H 300
            A 120 120 0 0 1 300 180
            Z
        " fill="none" stroke="#d14" stroke-width="20" />

        <!-- COULOIR 2 -->
        <path id="trackPath2" d="
            M 300 200
            H 1300
            A 100 100 0 0 1 1300 400
            H 300
            A 100 100 0 0 1 300 200
            Z
        " fill="none" stroke="#e35" stroke-width="20" />

        <!-- COULOIR 3 -->
        <path id="trackPath3" d="
            M 300 220
            H 1300
            A 80 80 0 0 1 1300 380
            H 300
            A 80 80 0 0 1 300 220
            Z
        " fill="none" stroke="#f56" stroke-width="20" />

        <!-- COULOIR 4 -->
        <path id="trackPath4" d="
            M 300 240
            H 1300
            A 60 60 0 0 1 1300 360
            H 300
            A 60 60 0 0 1 300 240
            Z
        " fill="none" stroke="#f78" stroke-width="20" />
        
        <line class="start-line" x1="677.03173828125" y1="170" x2="677.03173828125" y2="190" stroke="white" stroke-width="3"></line>
        <line class="start-line" x1="551.362060546875" y1="190" x2="551.362060546875" y2="210" stroke="white" stroke-width="3"></line>
        <line class="start-line" x1="425.66748046875" y1="210" x2="425.66748046875" y2="230" stroke="white" stroke-width="3"></line>
        <line class="start-line" x1="300" y1="230" x2="300" y2="250" stroke="white" stroke-width="3"></line>

        <line x1="300" y1="170" x2="300" y2="250" stroke="blue" stroke-width="4" stroke-dasharray="6,5" />
        
    </svg>
</div>

<div id="progressBars" style="width: 80%; margin: 20px auto;"></div>

<div id="victoryPopup" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.7); text-align:center; z-index:1000;">
    <div style="background:white; padding:40px; display:inline-block; margin-top:10%; border-radius:8px;">
        <h1 id="victoryTitle">Victoire !</h1>
        <img id="victorySprite" src="" alt="Gagnant" style="width:150px; height:150px;" />
        <p id="victoryMessage"></p>
        <button onclick="document.getElementById('victoryPopup').style.display='none'" style="padding:10px 20px;">Fermer</button>
    </div>
</div>

<style>
    #raceContainer {
        position: relative;
        width: 1600px;
        height: 600px;
        margin: 30px auto;
        overflow: hidden;
    }

    #raceContainer svg {
        position: absolute;
        top: 0;
        left: 0;
    }

    .runner {
        position: absolute;
        width: 50px;
        height: 50px;
        transition: transform 0.05s linear;
        pointer-events: none;
    }

    .progress-item {
        margin: 5px 0;
    }

    .progress-label {
        display: inline-block;
        width: 100px;
    }

    .progress-bar {
        display: inline-block;
        height: 20px;
        background: #ddd;
        border: 1px solid #999;
        width: 60%;
        position: relative;
    }

    .progress-fill {
        height: 100%;
        background: green;
        width: 0%;
    }
</style>

<script>
  const paths = [
    document.getElementById('trackPath1'),
    document.getElementById('trackPath2'),
    document.getElementById('trackPath3'),
    document.getElementById('trackPath4')
  ];
  const svg = document.getElementById('raceSVG');

  const totalLengths = paths.map(p => p.getTotalLength());
  const maxLength = Math.max(...totalLengths);
  let startOffsets = totalLengths.map(length => maxLength - length);
  startOffsets = startOffsets.reverse();

  const pokemons = ["pikachu", "bulbasaur", "charmander", "squirtle"];
  const runners = [];

  const track = document.getElementById('raceContainer');

  // ✅ Charger les sprites une fois au chargement
  window.addEventListener('DOMContentLoaded', async () => {
    for (let i = 0; i < pokemons.length; i++) {
      const pokeName = pokemons[i];
      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokeName}`);
      const data = await res.json();
      const spriteUrl = data.sprites.back_default;
      const spriteFront = data.sprites.front_default;

      const img = document.createElement('img');
      img.src = spriteUrl;
      img.className = 'runner';
      track.appendChild(img);

      runners.push({ img: img, front: spriteFront, name: pokeName });

      // Placer chaque sprite sur sa ligne de départ
      const point = paths[i].getPointAtLength(startOffsets[i]);
      img.style.transform = `translate(${point.x - 25}px, ${point.y - 25}px)`;
    }
  });

  document.getElementById('startRace').addEventListener('click', () => {
    const selectedPokemon = document.getElementById('pokemon').value;
    const mise = parseInt(document.getElementById('mise').value);

    const steps = [...startOffsets];

    const progressBars = [];
    const progressContainer = document.getElementById('progressBars');
    progressContainer.innerHTML = '';

    pokemons.forEach(pokeName => {
      const item = document.createElement('div');
      item.className = 'progress-item';

      const label = document.createElement('span');
      label.className = 'progress-label';
      label.innerText = pokeName;

      const bar = document.createElement('div');
      bar.className = 'progress-bar';

      const fill = document.createElement('div');
      fill.className = 'progress-fill';

      bar.appendChild(fill);
      item.appendChild(label);
      item.appendChild(bar);
      progressContainer.appendChild(item);

      progressBars.push(fill);
    });

    let winnerIndex = -1;

    const interval = setInterval(() => {
      let finished = false;

      for (let i = 0; i < runners.length; i++) {
        if (steps[i] >= totalLengths[i]) continue;

        // Vitesse pour test : même pour tous
        steps[i] += 8;

        const point = paths[i].getPointAtLength(steps[i]);
        runners[i].img.style.transform = `translate(${point.x - 25}px, ${point.y - 25}px)`;

        const percent = Math.min((steps[i] - startOffsets[i]) / (totalLengths[i] - startOffsets[i]) * 100, 100);
        progressBars[i].style.width = percent + '%';

        if (steps[i] >= totalLengths[i] && winnerIndex === -1) {
          winnerIndex = i;
          finished = true;
        }
      }

      if (finished) {
        clearInterval(interval);
        const winnerName = runners[winnerIndex].name;
        const winnerSprite = runners[winnerIndex].front;

        let gain = 0;
        if (selectedPokemon.toLowerCase() === winnerName) {
          gain = mise;
        }

        fetch('/api/player/update', {
          method: 'POST',
          credentials: 'include',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            game: "PariPoke",
            experience: 0,
            pokedollar: gain
          })
        });

        document.getElementById('victoryTitle').innerText = `Victoire de ${winnerName}!`;
        document.getElementById('victorySprite').src = winnerSprite;
        document.getElementById('victoryMessage').innerText = gain > 0
          ? `Bravo ! Tu remportes ${gain} pokédollars !`
          : `Dommage, tu perds ton pari.`;

        document.getElementById('victoryPopup').style.display = 'block';
      }
    }, 50);
  });
</script>
